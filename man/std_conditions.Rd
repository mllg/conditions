% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogenerated.R, R/std_conditions.R
\name{assertion_message}
\alias{assertion_error}
\alias{assertion_message}
\alias{assertion_warning}
\alias{deprecated_error}
\alias{deprecated_message}
\alias{deprecated_warning}
\alias{dimension_error}
\alias{dimension_message}
\alias{dimension_warning}
\alias{future_error}
\alias{future_message}
\alias{future_warning}
\alias{index_error}
\alias{index_message}
\alias{index_warning}
\alias{io_error}
\alias{io_message}
\alias{io_warning}
\alias{length_error}
\alias{length_message}
\alias{length_warning}
\alias{library_error}
\alias{library_message}
\alias{library_warning}
\alias{lookup_error}
\alias{lookup_message}
\alias{lookup_warning}
\alias{missing_error}
\alias{missing_message}
\alias{missing_warning}
\alias{name_error}
\alias{name_message}
\alias{name_warning}
\alias{runtime_error}
\alias{runtime_message}
\alias{runtime_warning}
\alias{std_conditions}
\alias{type_error}
\alias{type_message}
\alias{type_warning}
\alias{value_error}
\alias{value_message}
\alias{value_warning}
\title{Functions to generate standardized conditions}
\usage{
assertion_message(message, call = sys.call(-1L))

deprecated_message(message, call = sys.call(-1L))

dimension_message(message, call = sys.call(-1L))

future_message(message, call = sys.call(-1L))

index_message(message, call = sys.call(-1L))

io_message(message, call = sys.call(-1L))

length_message(message, call = sys.call(-1L))

library_message(message, call = sys.call(-1L))

lookup_message(message, call = sys.call(-1L))

missing_message(message, call = sys.call(-1L))

name_message(message, call = sys.call(-1L))

runtime_message(message, call = sys.call(-1L))

type_message(message, call = sys.call(-1L))

value_message(message, call = sys.call(-1L))

assertion_warning(message, call = sys.call(-1L))

deprecated_warning(message, call = sys.call(-1L))

dimension_warning(message, call = sys.call(-1L))

future_warning(message, call = sys.call(-1L))

index_warning(message, call = sys.call(-1L))

io_warning(message, call = sys.call(-1L))

length_warning(message, call = sys.call(-1L))

library_warning(message, call = sys.call(-1L))

lookup_warning(message, call = sys.call(-1L))

missing_warning(message, call = sys.call(-1L))

name_warning(message, call = sys.call(-1L))

runtime_warning(message, call = sys.call(-1L))

type_warning(message, call = sys.call(-1L))

value_warning(message, call = sys.call(-1L))

assertion_error(message, call = sys.call(-1L))

deprecated_error(message, call = sys.call(-1L))

dimension_error(message, call = sys.call(-1L))

future_error(message, call = sys.call(-1L))

index_error(message, call = sys.call(-1L))

io_error(message, call = sys.call(-1L))

length_error(message, call = sys.call(-1L))

library_error(message, call = sys.call(-1L))

lookup_error(message, call = sys.call(-1L))

missing_error(message, call = sys.call(-1L))

name_error(message, call = sys.call(-1L))

runtime_error(message, call = sys.call(-1L))

type_error(message, call = sys.call(-1L))

value_error(message, call = sys.call(-1L))
}
\arguments{
\item{message}{[\code{character(1)}]\cr
Condition message.}

\item{call}{[\code{call} || \code{NULL}]\cr
Call stack.}
}
\value{
[\code{\link[base]{condition}}].
}
\description{
Implementations to generate standardized conditions:
\itemize{
  \item{assertion}{Assertion (on user input) failed.}
  \item{deprecated}{Feature is deprecated.}
  \item{dimension}{Wrong dimension.}
  \item{future}{Feature is subject to change in the future.}
  \item{index}{Subscript out of range.}
  \item{io}{File/directory not found or accessible.}
  \item{length}{Wrong length.}
  \item{library}{Required package not installed.}
  \item{lookup}{Named subelement does not exist.}
  \item{missing}{Missing values.}
  \item{name}{Failed lookup of a global variable.}
  \item{runtime}{Something else which does not fit in any other category went wrong.}
  \item{type}{Unexpected type/class.}
  \item{value}{Inappropriate value.}
}
}

