% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_condition.R, R/autogenerated.R
\name{as_message}
\alias{as_message}
\alias{as_warning}
\alias{as_error}
\alias{as_assertionMessage}
\alias{as_deprecatedMessage}
\alias{as_defunctMessage}
\alias{as_dimensionMessage}
\alias{as_futureMessage}
\alias{as_indexMessage}
\alias{as_ioMessage}
\alias{as_lengthMessage}
\alias{as_libraryMessage}
\alias{as_lookupMessage}
\alias{as_missingMessage}
\alias{as_nameMessage}
\alias{as_runtimeMessage}
\alias{as_typeMessage}
\alias{as_valueMessage}
\alias{as_assertionWarning}
\alias{as_deprecatedWarning}
\alias{as_defunctWarning}
\alias{as_dimensionWarning}
\alias{as_futureWarning}
\alias{as_indexWarning}
\alias{as_ioWarning}
\alias{as_lengthWarning}
\alias{as_libraryWarning}
\alias{as_lookupWarning}
\alias{as_missingWarning}
\alias{as_nameWarning}
\alias{as_runtimeWarning}
\alias{as_typeWarning}
\alias{as_valueWarning}
\alias{as_assertionError}
\alias{as_deprecatedError}
\alias{as_defunctError}
\alias{as_dimensionError}
\alias{as_futureError}
\alias{as_indexError}
\alias{as_ioError}
\alias{as_lengthError}
\alias{as_libraryError}
\alias{as_lookupError}
\alias{as_missingError}
\alias{as_nameError}
\alias{as_runtimeError}
\alias{as_typeError}
\alias{as_valueError}
\title{Convert Conditions}
\usage{
as_message(class, message = NULL)

as_warning(class, message = NULL)

as_error(class, message = NULL)

as_assertionMessage(message = NULL)

as_deprecatedMessage(message = NULL)

as_defunctMessage(message = NULL)

as_dimensionMessage(message = NULL)

as_futureMessage(message = NULL)

as_indexMessage(message = NULL)

as_ioMessage(message = NULL)

as_lengthMessage(message = NULL)

as_libraryMessage(message = NULL)

as_lookupMessage(message = NULL)

as_missingMessage(message = NULL)

as_nameMessage(message = NULL)

as_runtimeMessage(message = NULL)

as_typeMessage(message = NULL)

as_valueMessage(message = NULL)

as_assertionWarning(message = NULL)

as_deprecatedWarning(message = NULL)

as_defunctWarning(message = NULL)

as_dimensionWarning(message = NULL)

as_futureWarning(message = NULL)

as_indexWarning(message = NULL)

as_ioWarning(message = NULL)

as_lengthWarning(message = NULL)

as_libraryWarning(message = NULL)

as_lookupWarning(message = NULL)

as_missingWarning(message = NULL)

as_nameWarning(message = NULL)

as_runtimeWarning(message = NULL)

as_typeWarning(message = NULL)

as_valueWarning(message = NULL)

as_assertionError(message = NULL)

as_deprecatedError(message = NULL)

as_defunctError(message = NULL)

as_dimensionError(message = NULL)

as_futureError(message = NULL)

as_indexError(message = NULL)

as_ioError(message = NULL)

as_lengthError(message = NULL)

as_libraryError(message = NULL)

as_lookupError(message = NULL)

as_missingError(message = NULL)

as_nameError(message = NULL)

as_runtimeError(message = NULL)

as_typeError(message = NULL)

as_valueError(message = NULL)
}
\arguments{
\item{class}{[\code{character}]\cr
New classes for the condition.}

\item{message}{[\code{character}]\cr
If provided, overwrites the original condition message.}
}
\value{
[\code{function}]. Returns a function which takes a condition as first
  argument, creates a new condition of the respective type and signals the created
  condition with \code{\link[base]{message}}, \code{\link[base]{warning}} or
  \code{\link[base]{stop}}, respectively.
}
\description{
These functions are intended to change the class of conditions.
In combination with \code{\link[base]{tryCatch}}, unspecified conditions
can easily be casted to a more specific type.
See \code{\link{condition}} for a short explanation about the predefined
condition classes.
}
\examples{
# Turn the warning of sqrt() into a value message
message(tryCatch(sqrt(-1), warning = as_value_message()))

\dontrun{
# Turn the warning of sqrt() into a value error
tryCatch(sqrt(-1), warning = as_value_error())

# Or, alternatively with a custom message:
tryCatch(sqrt(-1), warning = as_value_error("sqrt of negative value"))
}
}
